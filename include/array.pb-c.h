/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: array.proto */

#ifndef PROTOBUF_C_array_2eproto__INCLUDED
#define PROTOBUF_C_array_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Tutorial__Entry Tutorial__Entry;
typedef struct _Tutorial__Myset Tutorial__Myset;
typedef struct _Tutorial__Array Tutorial__Array;


/* --- enums --- */


/* --- messages --- */

struct  _Tutorial__Entry
{
  ProtobufCMessage base;
  char *key;
  int32_t value;
};
#define TUTORIAL__ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tutorial__entry__descriptor) \
    , NULL, 0 }


struct  _Tutorial__Myset
{
  ProtobufCMessage base;
  int32_t timestamp;
  size_t n_entries;
  Tutorial__Entry **entries;
};
#define TUTORIAL__MYSET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tutorial__myset__descriptor) \
    , 0, 0,NULL }


struct  _Tutorial__Array
{
  ProtobufCMessage base;
  size_t n_sets;
  Tutorial__Myset **sets;
};
#define TUTORIAL__ARRAY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tutorial__array__descriptor) \
    , 0,NULL }


/* Tutorial__Entry methods */
void   tutorial__entry__init
                     (Tutorial__Entry         *message);
size_t tutorial__entry__get_packed_size
                     (const Tutorial__Entry   *message);
size_t tutorial__entry__pack
                     (const Tutorial__Entry   *message,
                      uint8_t             *out);
size_t tutorial__entry__pack_to_buffer
                     (const Tutorial__Entry   *message,
                      ProtobufCBuffer     *buffer);
Tutorial__Entry *
       tutorial__entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tutorial__entry__free_unpacked
                     (Tutorial__Entry *message,
                      ProtobufCAllocator *allocator);
/* Tutorial__Myset methods */
void   tutorial__myset__init
                     (Tutorial__Myset         *message);
size_t tutorial__myset__get_packed_size
                     (const Tutorial__Myset   *message);
size_t tutorial__myset__pack
                     (const Tutorial__Myset   *message,
                      uint8_t             *out);
size_t tutorial__myset__pack_to_buffer
                     (const Tutorial__Myset   *message,
                      ProtobufCBuffer     *buffer);
Tutorial__Myset *
       tutorial__myset__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tutorial__myset__free_unpacked
                     (Tutorial__Myset *message,
                      ProtobufCAllocator *allocator);
/* Tutorial__Array methods */
void   tutorial__array__init
                     (Tutorial__Array         *message);
size_t tutorial__array__get_packed_size
                     (const Tutorial__Array   *message);
size_t tutorial__array__pack
                     (const Tutorial__Array   *message,
                      uint8_t             *out);
size_t tutorial__array__pack_to_buffer
                     (const Tutorial__Array   *message,
                      ProtobufCBuffer     *buffer);
Tutorial__Array *
       tutorial__array__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tutorial__array__free_unpacked
                     (Tutorial__Array *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Tutorial__Entry_Closure)
                 (const Tutorial__Entry *message,
                  void *closure_data);
typedef void (*Tutorial__Myset_Closure)
                 (const Tutorial__Myset *message,
                  void *closure_data);
typedef void (*Tutorial__Array_Closure)
                 (const Tutorial__Array *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor tutorial__entry__descriptor;
extern const ProtobufCMessageDescriptor tutorial__myset__descriptor;
extern const ProtobufCMessageDescriptor tutorial__array__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_array_2eproto__INCLUDED */
